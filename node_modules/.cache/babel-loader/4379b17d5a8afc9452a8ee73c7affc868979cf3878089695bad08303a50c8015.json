{"ast":null,"code":"var _jsxFileName = \"/Users/allisonchu/Projects/sorting-visualizer/src/components/SortingVisualizer/SortingVizualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport VerticalBar from '../ui/VerticalBar';\nimport { MergeSort } from '../../utils/SortingAlgorithms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SortingVizualizer() {\n  _s();\n  const [newArray, setNewArray] = useState(null);\n  const [width, setWidth] = useState(0);\n  const [activeAlgoName, setActiveAlgoName] = useState(\"N/A\");\n  const ref = useRef(null);\n  const generateNewArray = () => {\n    const curArray = [];\n    for (let i = 0; i < 100; i++) {\n      curArray.push(randomIntFromInterval(5, 500));\n    }\n    setNewArray(curArray);\n  };\n  const mergeSort = () => {\n    setNewArray(MergeSort(newArray));\n  };\n  const quickSort = () => {};\n  const heapSort = () => {};\n  const bubbleSort = () => {};\n  const testSortingAlgorithm = algoName => {\n    const jsSortedArr = newArray.toSorted((a, b) => a - b);\n    if (arraysAreEqual(newArray, jsSortedArr)) {\n      console.log(algoName);\n    }\n    console.log('array sorted?', jsSortedArr);\n  };\n  useEffect(() => {\n    setWidth(ref.current.offsetWidth);\n    const getwidth = () => {\n      setWidth(ref.current.offsetWidth / 100);\n    };\n    window.addEventListener(\"resize\", getwidth);\n    return () => window.removeEventListener(\"resize\", getwidth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex place-items-center min-h-screen flex-col p-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-5/6 min-w-96 h-[515px] flex flex-row place-items-end\",\n      ref: ref,\n      children: newArray !== null && newArray.map((int, id) => /*#__PURE__*/_jsxDEV(VerticalBar, {\n        width: width,\n        height: int\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row gap-2 m-5 text-white text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: generateNewArray,\n        children: \"Generate New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: mergeSort,\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: quickSort,\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: heapSort,\n        children: \"Heap Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: bubbleSort,\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: testSortingAlgorithm,\n        children: \"Test Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\n_s(SortingVizualizer, \"5cbQyZxQbmYXjG7+m21tScJXoL0=\");\n_c = SortingVizualizer;\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nfunction arraysAreEqual(arrOne, arrTwo) {\n  if (arrOne.length !== arrTwo.length) return false;\n  for (let i = 0; i < arrOne.length; i++) {\n    if (arrOne[i] !== arrTwo[i]) return false;\n  }\n  return true;\n}\nvar _c;\n$RefreshReg$(_c, \"SortingVizualizer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","VerticalBar","MergeSort","jsxDEV","_jsxDEV","SortingVizualizer","_s","newArray","setNewArray","width","setWidth","activeAlgoName","setActiveAlgoName","ref","generateNewArray","curArray","i","push","randomIntFromInterval","mergeSort","quickSort","heapSort","bubbleSort","testSortingAlgorithm","algoName","jsSortedArr","toSorted","a","b","arraysAreEqual","console","log","current","offsetWidth","getwidth","window","addEventListener","removeEventListener","className","children","map","int","id","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","min","max","Math","floor","random","arrOne","arrTwo","length","$RefreshReg$"],"sources":["/Users/allisonchu/Projects/sorting-visualizer/src/components/SortingVisualizer/SortingVizualizer.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport VerticalBar from '../ui/VerticalBar';\nimport { MergeSort } from '../../utils/SortingAlgorithms';\n\nexport default function SortingVizualizer() {\n    const [newArray, setNewArray] = useState(null);\n    const [width, setWidth] = useState(0);\n    const [activeAlgoName, setActiveAlgoName] = useState(\"N/A\")\n    const ref = useRef(null);\n\n    const generateNewArray = () => {\n        const curArray = []\n\n        for (let i = 0; i < 100; i++) {\n            curArray.push(randomIntFromInterval(5, 500));\n        }\n        setNewArray(curArray);\n    };\n\n    const mergeSort = () => {\n        setNewArray(MergeSort(newArray));\n    };\n\n    const quickSort = () => {\n\n    };\n\n    const heapSort = () => {\n\n    };\n\n    const bubbleSort = () => {\n\n    };\n\n    const testSortingAlgorithm = (algoName) => {\n        const jsSortedArr = newArray.toSorted((a, b) => a - b);\n\n        if (arraysAreEqual(newArray, jsSortedArr)) {\n            console.log(algoName)\n        }\n        console.log('array sorted?', jsSortedArr)\n    };\n\n    useEffect(() => {\n        setWidth(ref.current.offsetWidth);\n\n        const getwidth = () => {\n            setWidth(ref.current.offsetWidth / 100);\n        };\n\n        window.addEventListener(\"resize\", getwidth);\n\n        return () => window.removeEventListener(\"resize\", getwidth);\n    }, []);\n\n    return (\n        <div className='flex place-items-center min-h-screen flex-col p-20'>\n            <div className='w-5/6 min-w-96 h-[515px] flex flex-row place-items-end' ref={ref}>\n                {newArray !== null && newArray.map((int, id) =>\n                    <VerticalBar key={id} width={width} height={int} />\n                )}\n            </div>\n            <div className=\"flex flex-row gap-2 m-5 text-white text-sm\">\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={generateNewArray}>Generate New Array</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={mergeSort}>Merge Sort</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={quickSort}>Quick Sort</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={heapSort}>Heap Sort</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={bubbleSort}>Bubble Sort</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={testSortingAlgorithm}>Test Algorithm</button>\n            </div>\n        </div >\n    )\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction arraysAreEqual(arrOne, arrTwo) {\n    if (arrOne.length !== arrTwo.length) return false;\n\n    for (let i = 0; i < arrOne.length; i++) {\n        if (arrOne[i] !== arrTwo[i]) return false;\n    }\n\n    return true;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}