{"ast":null,"code":"// import React from \"react\";\n\nconst merge = (leftArr, rightArr) => {\n  var result = [];\n  while (leftArr.length > 0 && rightArr.length > 0) result.push(leftArr[0] < rightArr[0] ? leftArr.shift() : rightArr.shift());\n  return result.concat(leftArr.length ? leftArr : rightArr);\n};\nfunction mergeSort(arr, animations) {\n  if (arr === null) {\n    return;\n  }\n  if (arr.length === 1) {\n    return arr;\n  }\n  const midIndex = Math.floor(arr.length / 2);\n  const leftArr = mergeSort(arr.slice(0, midIndex), animations);\n  const rightArr = mergeSort(arr.slice(midIndex), animations);\n  return merge(mergeSort(leftArr, animations), mergeSort(rightArr, animations));\n}\nexport function SortAnimations(algoName, arr) {\n  const animations = [];\n  const tempArray = arr.slice();\n  const mergeSortObj = {\n    animations: null,\n    sortedArray: null\n  };\n  switch (algoName) {\n    case \"Merge Sort\":\n      mergeSortObj.sortedArray = mergeSort(arr);\n      mergeSortObj.animations = mergeSortAnimationsHelper(arr, 0, arr.length - 1, tempArray, animations);\n      return mergeSortObj;\n    default:\n      mergeSortObj.sortedArray = null;\n      mergeSortObj.animations = null;\n  }\n  return mergeSortObj;\n}\n_c = SortAnimations;\nfunction mergeSortAnimationsHelper(arr, startIdx, endIdx, tempArray, animations) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortAnimationsHelper(tempArray, startIdx, middleIdx, arr, animations);\n  mergeSortAnimationsHelper(tempArray, middleIdx + 1, endIdx, arr, animations);\n  doMerge(arr, startIdx, middleIdx, endIdx, tempArray, animations);\n}\nfunction doMerge(arr, startIdx, middleIdx, endIdx, tempArray, animations) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (tempArray[i] <= tempArray[j]) {\n      animations.push([k, tempArray[i]]);\n      arr[k++] = tempArray[i++];\n    } else {\n      animations.push([k, tempArray[j]]);\n      arr[k++] = tempArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, tempArray[i]]);\n    arr[k++] = tempArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, tempArray[j]]);\n    arr[k++] = tempArray[j++];\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"SortAnimations\");","map":{"version":3,"names":["merge","leftArr","rightArr","result","length","push","shift","concat","mergeSort","arr","animations","midIndex","Math","floor","slice","SortAnimations","algoName","tempArray","mergeSortObj","sortedArray","mergeSortAnimationsHelper","_c","startIdx","endIdx","middleIdx","doMerge","k","i","j","$RefreshReg$"],"sources":["/Users/allisonchu/Projects/sorting-visualizer/src/utils/SortingAlgorithms.js"],"sourcesContent":["// import React from \"react\";\n\nconst merge = (leftArr, rightArr) => {\n  var result = [];\n\n  while (leftArr.length > 0 && rightArr.length > 0)\n    result.push(leftArr[0] < rightArr[0] ? leftArr.shift() : rightArr.shift());\n\n  return result.concat(leftArr.length ? leftArr : rightArr);\n};\n\nfunction mergeSort(arr, animations) {\n  if (arr === null) {\n    return;\n  }\n\n  if (arr.length === 1) {\n    return arr;\n  }\n\n  const midIndex = Math.floor(arr.length / 2);\n  const leftArr = mergeSort(arr.slice(0, midIndex), animations);\n  const rightArr = mergeSort(arr.slice(midIndex), animations);\n\n  return merge(mergeSort(leftArr, animations), mergeSort(rightArr, animations));\n}\n\nexport function SortAnimations(algoName, arr) {\n  const animations = [];\n  const tempArray = arr.slice();\n  const mergeSortObj = {\n    animations: null,\n    sortedArray: null,\n  };\n\n  switch (algoName) {\n    case \"Merge Sort\":\n      mergeSortObj.sortedArray = mergeSort(arr);\n      mergeSortObj.animations = mergeSortAnimationsHelper(\n        arr,\n        0,\n        arr.length - 1,\n        tempArray,\n        animations\n      );\n      return mergeSortObj;\n    default:\n      mergeSortObj.sortedArray = null;\n      mergeSortObj.animations = null;\n  }\n\n  return mergeSortObj;\n}\n\nfunction mergeSortAnimationsHelper(\n  arr,\n  startIdx,\n  endIdx,\n  tempArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortAnimationsHelper(tempArray, startIdx, middleIdx, arr, animations);\n  mergeSortAnimationsHelper(tempArray, middleIdx + 1, endIdx, arr, animations);\n  doMerge(arr, startIdx, middleIdx, endIdx, tempArray, animations);\n}\n\nfunction doMerge(arr, startIdx, middleIdx, endIdx, tempArray, animations) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (tempArray[i] <= tempArray[j]) {\n      animations.push([k, tempArray[i]]);\n      arr[k++] = tempArray[i++];\n    } else {\n      animations.push([k, tempArray[j]]);\n      arr[k++] = tempArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, tempArray[i]]);\n    arr[k++] = tempArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, tempArray[j]]);\n    arr[k++] = tempArray[j++];\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}