{"ast":null,"code":"var _jsxFileName = \"/Users/allisonchu/Projects/sorting-visualizer/src/components/SortingVisualizer/SortingVizualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport VerticalBar from '../ui/VerticalBar';\nimport { MergeSort } from '../../utils/SortingAlgorithms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SortingVizualizer() {\n  _s();\n  const [newArray, setNewArray] = useState(null);\n  const ref = useRef(null);\n  const [width, setWidth] = useState(0);\n  const generateNewArray = () => {\n    const curArray = [];\n    for (let i = 0; i < 20; i++) {\n      curArray.push(randomIntFromInterval(5, 500));\n    }\n    setNewArray(curArray);\n  };\n  useEffect(() => {\n    // when the component gets mounted\n    setWidth(ref.current.offsetWidth);\n    // to handle page resize\n    const getwidth = () => {\n      setWidth(ref.current.offsetWidth / 20);\n    };\n    window.addEventListener(\"resize\", getwidth);\n    // remove the event listener before the component gets unmounted\n    return () => window.removeEventListener(\"resize\", getwidth);\n  }, []);\n  const mergeSort = () => {\n    setNewArray(MergeSort(newArray));\n  };\n  const quickSort = () => {};\n  const heapSort = () => {};\n  const bubbleSort = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex place-items-center min-h-screen flex-col p-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-5/6 min-w-96 h-[515px] flex flex-row place-items-end\",\n      ref: ref,\n      children: newArray !== null && newArray.map((int, id) => /*#__PURE__*/_jsxDEV(VerticalBar, {\n        width: width,\n        height: int\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row gap-2 m-5 text-white text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: generateNewArray,\n        children: \"Generate New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: mergeSort,\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: quickSort,\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: heapSort,\n        children: \"Heap Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"py-1 px-2 bg-blue-950 rounded-md\",\n        onClick: bubbleSort,\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\n_s(SortingVizualizer, \"h5q9Q4Jg/lERbA1mAsQw2uBc1FM=\");\n_c = SortingVizualizer;\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nvar _c;\n$RefreshReg$(_c, \"SortingVizualizer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","VerticalBar","MergeSort","jsxDEV","_jsxDEV","SortingVizualizer","_s","newArray","setNewArray","ref","width","setWidth","generateNewArray","curArray","i","push","randomIntFromInterval","current","offsetWidth","getwidth","window","addEventListener","removeEventListener","mergeSort","quickSort","heapSort","bubbleSort","className","children","map","int","id","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","min","max","Math","floor","random","$RefreshReg$"],"sources":["/Users/allisonchu/Projects/sorting-visualizer/src/components/SortingVisualizer/SortingVizualizer.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport VerticalBar from '../ui/VerticalBar';\nimport { MergeSort } from '../../utils/SortingAlgorithms';\n\nexport default function SortingVizualizer() {\n    const [newArray, setNewArray] = useState(null);\n    const ref = useRef(null);\n    const [width, setWidth] = useState(0);\n\n    const generateNewArray = () => {\n        const curArray = []\n\n        for (let i = 0; i < 20; i++) {\n            curArray.push(randomIntFromInterval(5, 500));\n        }\n        setNewArray(curArray);\n    };\n\n    useEffect(() => {\n        // when the component gets mounted\n        setWidth(ref.current.offsetWidth);\n        // to handle page resize\n        const getwidth = () => {\n            setWidth(ref.current.offsetWidth / 20);\n        };\n        window.addEventListener(\"resize\", getwidth);\n        // remove the event listener before the component gets unmounted\n        return () => window.removeEventListener(\"resize\", getwidth);\n    }, []);\n\n    const mergeSort = () => {\n        setNewArray(MergeSort(newArray));\n    };\n\n    const quickSort = () => {\n\n    };\n\n    const heapSort = () => {\n\n    };\n\n    const bubbleSort = () => {\n\n    };\n\n    return (\n        <div className='flex place-items-center min-h-screen flex-col p-20'>\n            <div className='w-5/6 min-w-96 h-[515px] flex flex-row place-items-end' ref={ref}>\n                {newArray !== null && newArray.map((int, id) =>\n                    <VerticalBar key={id} width={width} height={int} />\n                )}\n            </div>\n            <div className=\"flex flex-row gap-2 m-5 text-white text-sm\">\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={generateNewArray}>Generate New Array</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={mergeSort}>Merge Sort</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={quickSort}>Quick Sort</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={heapSort}>Heap Sort</button>\n                <button className=\"py-1 px-2 bg-blue-950 rounded-md\" onClick={bubbleSort}>Bubble Sort</button>\n            </div>\n        </div >\n    )\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,SAAS,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMW,GAAG,GAAGV,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAG,EAAE;IAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzBD,QAAQ,CAACE,IAAI,CAACC,qBAAqB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAChD;IACAR,WAAW,CAACK,QAAQ,CAAC;EACzB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZ;IACAW,QAAQ,CAACF,GAAG,CAACQ,OAAO,CAACC,WAAW,CAAC;IACjC;IACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACnBR,QAAQ,CAACF,GAAG,CAACQ,OAAO,CAACC,WAAW,GAAG,EAAE,CAAC;IAC1C,CAAC;IACDE,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;IAC3C;IACA,OAAO,MAAMC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEH,QAAQ,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACpBf,WAAW,CAACN,SAAS,CAACK,QAAQ,CAAC,CAAC;EACpC,CAAC;EAED,MAAMiB,SAAS,GAAGA,CAAA,KAAM,CAExB,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM,CAEvB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM,CAEzB,CAAC;EAED,oBACItB,OAAA;IAAKuB,SAAS,EAAC,oDAAoD;IAAAC,QAAA,gBAC/DxB,OAAA;MAAKuB,SAAS,EAAC,wDAAwD;MAAClB,GAAG,EAAEA,GAAI;MAAAmB,QAAA,EAC5ErB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,CAACsB,GAAG,CAAC,CAACC,GAAG,EAAEC,EAAE,kBACvC3B,OAAA,CAACH,WAAW;QAAUS,KAAK,EAAEA,KAAM;QAACsB,MAAM,EAAEF;MAAI,GAA9BC,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8B,CACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACNhC,OAAA;MAAKuB,SAAS,EAAC,4CAA4C;MAAAC,QAAA,gBACvDxB,OAAA;QAAQuB,SAAS,EAAC,kCAAkC;QAACU,OAAO,EAAEzB,gBAAiB;QAAAgB,QAAA,EAAC;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3GhC,OAAA;QAAQuB,SAAS,EAAC,kCAAkC;QAACU,OAAO,EAAEd,SAAU;QAAAK,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5FhC,OAAA;QAAQuB,SAAS,EAAC,kCAAkC;QAACU,OAAO,EAAEb,SAAU;QAAAI,QAAA,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5FhC,OAAA;QAAQuB,SAAS,EAAC,kCAAkC;QAACU,OAAO,EAAEZ,QAAS;QAAAG,QAAA,EAAC;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1FhC,OAAA;QAAQuB,SAAS,EAAC,kCAAkC;QAACU,OAAO,EAAEX,UAAW;QAAAE,QAAA,EAAC;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;;AAEA;AAAA9B,EAAA,CA5DwBD,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AA6DzC,SAASW,qBAAqBA,CAACuB,GAAG,EAAEC,GAAG,EAAE;EACrC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC5D;AAAC,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}