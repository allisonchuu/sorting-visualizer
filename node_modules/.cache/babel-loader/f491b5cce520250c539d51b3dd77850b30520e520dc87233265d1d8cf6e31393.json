{"ast":null,"code":"// import React from \"react\";\n\nconst merge = (leftArr, rightArr) => {\n  var result = [];\n  while (leftArr.length > 0 && rightArr.length > 0) result.push(leftArr[0] < rightArr[0] ? leftArr.shift() : rightArr.shift());\n  return result.concat(leftArr.length ? leftArr : rightArr);\n};\nexport function MergeSort(arr, animations = []) {\n  let mergeArrayObj = {\n    mergedArrayActual: arr,\n    mergedArrayAnimations: animations\n  };\n  if (arr === null) {\n    return;\n  }\n  if (arr.length === 1) {\n    return arr;\n  }\n  const midIndex = Math.floor(arr.length / 2);\n  const leftArr = MergeSort(arr.slice(0, midIndex));\n  const rightArr = MergeSort(arr.slice(midIndex));\n  mergedArrayActual = merge(leftArr, rightArr);\n  return mergedArrayActual;\n}\n_c = MergeSort;\nvar _c;\n$RefreshReg$(_c, \"MergeSort\");","map":{"version":3,"names":["merge","leftArr","rightArr","result","length","push","shift","concat","MergeSort","arr","animations","mergeArrayObj","mergedArrayActual","mergedArrayAnimations","midIndex","Math","floor","slice","_c","$RefreshReg$"],"sources":["/Users/allisonchu/Projects/sorting-visualizer/src/utils/SortingAlgorithms.js"],"sourcesContent":["// import React from \"react\";\n\nconst merge = (leftArr, rightArr) => {\n  var result = [];\n\n  while (leftArr.length > 0 && rightArr.length > 0)\n    result.push(leftArr[0] < rightArr[0] ? leftArr.shift() : rightArr.shift());\n\n  return result.concat(leftArr.length ? leftArr : rightArr);\n};\n\nexport function MergeSort(arr, animations = []) {\n  let mergeArrayObj = {\n    mergedArrayActual: arr,\n    mergedArrayAnimations: animations,\n  };\n\n  if (arr === null) {\n    return;\n  }\n\n  if (arr.length === 1) {\n    return arr;\n  }\n\n  const midIndex = Math.floor(arr.length / 2);\n  const leftArr = MergeSort(arr.slice(0, midIndex));\n  const rightArr = MergeSort(arr.slice(midIndex));\n\n  mergedArrayActual = merge(leftArr, rightArr);\n\n  return mergedArrayActual;\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;EACnC,IAAIC,MAAM,GAAG,EAAE;EAEf,OAAOF,OAAO,CAACG,MAAM,GAAG,CAAC,IAAIF,QAAQ,CAACE,MAAM,GAAG,CAAC,EAC9CD,MAAM,CAACE,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC,GAAGD,OAAO,CAACK,KAAK,CAAC,CAAC,GAAGJ,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC;EAE5E,OAAOH,MAAM,CAACI,MAAM,CAACN,OAAO,CAACG,MAAM,GAAGH,OAAO,GAAGC,QAAQ,CAAC;AAC3D,CAAC;AAED,OAAO,SAASM,SAASA,CAACC,GAAG,EAAEC,UAAU,GAAG,EAAE,EAAE;EAC9C,IAAIC,aAAa,GAAG;IAClBC,iBAAiB,EAAEH,GAAG;IACtBI,qBAAqB,EAAEH;EACzB,CAAC;EAED,IAAID,GAAG,KAAK,IAAI,EAAE;IAChB;EACF;EAEA,IAAIA,GAAG,CAACL,MAAM,KAAK,CAAC,EAAE;IACpB,OAAOK,GAAG;EACZ;EAEA,MAAMK,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACP,GAAG,CAACL,MAAM,GAAG,CAAC,CAAC;EAC3C,MAAMH,OAAO,GAAGO,SAAS,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC,EAAEH,QAAQ,CAAC,CAAC;EACjD,MAAMZ,QAAQ,GAAGM,SAAS,CAACC,GAAG,CAACQ,KAAK,CAACH,QAAQ,CAAC,CAAC;EAE/CF,iBAAiB,GAAGZ,KAAK,CAACC,OAAO,EAAEC,QAAQ,CAAC;EAE5C,OAAOU,iBAAiB;AAC1B;AAACM,EAAA,GArBeV,SAAS;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}